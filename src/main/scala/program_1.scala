
/**
  * 1. 函数就是对象
  * 2. scala 是纯粹的面向对象的语言，每个值都是对象，每个操作都是方法调用  +  -
  * 3. trait 可以有方法实现及字段
  *
  * 函数式编程
  * 1. 函数是头等值，函数也是值，与整数和字符串处于同一地位，
  * 2. 程序的操作应该把输入值映射为输出值而不是就地修改数据   （主要指的是不可变对象）
  * Scala 相比 Java语言，多了更多的不可变对象
  * 针对2的另外一种理解是： 方法不应该有任何的副作用，例如String的replace方法，只返回一个新的字符串，不会有其他的结果
  *
  * 推荐使用不可变数据结构和指称透明的方法！！！ 很多时候都是可以改写成这种形式的。
  *
  * 兼容性， 与Java
  * 简洁性:  语法，类型推断
  * 高级：  强大的函数字面量( 高级函数 )
  * 静态类型：属于静态类型中的类型推导，虽然使用val 定义，但是仍然是静态类型语言
  * 静态类型语言劣势的解决之道：1. 通过类型推断避免了每次都要写int，String，boolean 的冗余性
  *                             2. 通过模式匹配和一些新的编写和组织类型的办法获得了灵活性
  * 静态类型语言的优势：
  *           1. 可检验属性    不会让boolean 类型和 int 类型的变量相加
  *           2. 安全的重构
  *           3. 文档
  *
  */
object program_1 {}